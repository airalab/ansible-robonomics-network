---
###############################
####### GENERATE ACCOUNT ######
###############################
- name: Generate random account by Polkadot key
  shell:  "{% if prefix['key'] == 'grandpa' -%}
            {{ DATA_PATH }}/uploads/polkadot key generate --scheme Ed25519
          {% elif prefix['key'] == 'beefy' -%} 
            {{ DATA_PATH }}/uploads/polkadot key generate --scheme Ecdsa
          {% else -%}
            {{ DATA_PATH }}/uploads/polkadot key generate --scheme Sr25519
          {% endif -%}"
  register: account

- set_fact:
    seed: "{{ account.stdout_lines[0].split('Secret phrase:       ')[-1] }}"
    secret_seed: "{{ account.stdout_lines[2].split(' ')[-1] }}"
    public_key: "{{ account.stdout_lines[3].split('0x')[-1] }}"
    public_key_ss58: "{{ account.stdout_lines[5].split(' ')[-1] }}"
    account_id: "{{ account.stdout_lines[4].split('0x')[-1] }}"
  vars:
    regexp_seed: "`(.*?)`"

- debug: 
    msg: 
      - "{{ account }}"  
      - "seed: {{ seed }}"
      - "secret_seed: {{ secret_seed }}"
      - "public_key: {{ public_key }}"
      - "public_key_ss58: {{ public_key_ss58 }}"
      - "account_id: {{ account_id }}"

- name: Create key file for node
  copy:
    dest: "{{ DATA_PATH }}/uploads/validators/{{ validator_ip }}/keystore/{{ prefix.value }}{{ public_key }}"
    content: | 
      "{{ seed }}"
    mode: "0644"


- name: Set pair "prefix_key --> ss58_address" for spec generation
  set_fact:
    session_keys: "{{ session_keys | default({}) | combine ({ prefix.key : public_key_ss58 }) }}"